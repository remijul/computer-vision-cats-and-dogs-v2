# Nom du workflow affiché dans l'interface GitHub Actions
name: CI

# Configuration des déclencheurs
on:
  push:
    branches: [ main ]  # Le workflow se déclenche uniquement sur les push vers la branche main

jobs:
  # Job principal pour les tests
  test:
    # Utilise la dernière version d'Ubuntu comme environnement d'exécution
    runs-on: ubuntu-latest
    
    steps:
    # Étape 1 : Récupération du code source
    - name: Clone repository
      uses: actions/checkout@v4  # Action officielle pour cloner le repository
    
    # Étape 2 : Configuration de l'environnement Python
    - name: Set up Python
      uses: actions/setup-python@v4  # Action officielle pour installer Python
      with:
        python-version: 3.11  # Version spécifique de Python à utiliser
    
    # Étape 3 : Installation des dépendances
    - name: Install dependencies
      run: |
        # Installation des dépendances de base du projet
        pip install -r requirements/base.txt
        # Installation de pytest pour les tests (non inclus dans base.txt)
        pip install pytest
    
    # Étape 4 : Préparation de l'environnement de test
    - name: Setup test environment
      run: |
        # Création des répertoires nécessaires pour les tests
        mkdir -p data/processed/models
        # Création d'un fichier modèle factice pour les tests
        # (évite les erreurs si l'API cherche ce fichier au démarrage)
        touch data/processed/models/cats_dogs_model.keras
    
    # Étape 5 : Démarrage de l'API et exécution des tests
    - name: Start API and test
      run: |
        # Démarrage de l'API en arrière-plan (&)
        python scripts/run_api.py &
        # Attente de 10 secondes pour que l'API soit complètement démarrée
        sleep 10
        # Exécution des tests d'intégration de l'API
        python tests/test_api_simple.py